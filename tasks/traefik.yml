---
- name: 'Create network'
  docker_network:
    name: 'traefik_backend'
    driver: 'overlay'

- name: 'Create directory for container data'
  file:
    path: "{{ docker_data_dir }}/{{ dir }}"
    state: 'directory'
  loop:
    - 'traefik_data'
    - 'traefik_data/letsencrypt'
  loop_control:
    loop_var: 'dir'

- name: 'Create file for acme tls data'
  file:
    path: "{{ docker_data_dir }}/traefik_data/letsencrypt/acme.json"
    mode: '0600'
    state: touch
    modification_time: preserve
    access_time: preserve


- name: 'Copy traefik config into place'
  template:
    src: 'templates/traefik.toml.j2'
    dest: '{{ docker_data_dir }}/traefik_data/traefik.toml'
    mode: '0644'


- name: 'Deploy Traefik'
  docker_swarm_service:
    name: 'traefik'
    image: 'traefik:v2.0'
    env:
      # These should all be passed in as variables, including keys
      # to support different dns providers
      GANDIV5_API_KEY: "{{ acme_api_key_gandi }}"
      GANDIV5_HTTP_TIMEOUT: '60'
      GANDIV5_POLLING_INTERVAL: '180'
      GANDIV5_PROPAGATION_TIMEOUT: '360'
    labels:
      traefik.enable: 'true'
      traefik.http.routers.traefik.entrypoints: 'http'
      traefik.http.routers.traefik.rule: "Host(`api.{{ traefik_domain }}`)"
      traefik.http.middlewares.traefik-auth.basicauth.users: "{{ traefik_auth_credentials }}"
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: 'https'
      traefik.http.routers.traefik.middlewares: 'https-redirect'
      traefik.http.routers.traefik-secure.entrypoints: 'https'
      traefik.http.routers.traefik-secure.rule: "Host(`api.{{ traefik_domain }}`)"
      traefik.http.routers.traefik-secure.middlewares: 'traefik-auth'
      traefik.http.routers.traefik-secure.tls: 'true'
      traefik.http.routers.traefik-secure.tls.certresolver: 'letsencrypt'
      traefik.http.routers.traefik-secure.tls.domains[0].main: "{{ traefik_domain }}"
      traefik.http.routers.traefik-secure.tls.domains[0].sans: "*.{{ traefik_domain }}"
      traefik.http.routers.traefik-secure.service: 'api@internal'
      traefik.http.services.traefik.loadbalancer.server.port: '8080'
    mounts:
      - source: '/var/run/docker.sock'
        target: '/var/run/docker.sock'
        type: 'bind'
        readonly: yes
      - source: '{{ docker_data_dir }}/traefik_data/traefik.toml'
        target: '/traefik.toml'
        type: 'bind'
        readonly: yes
      - source: '{{ docker_data_dir }}/traefik_data/letsencrypt/acme.json'
        target: '/acme.json'
        type: 'bind'
    networks:
      - 'traefik_backend'
    mode: 'global'
    restart_config:
      condition: "{{ restart_condition }}"
    publish:
      - published_port: 80
        target_port: 80
      - published_port: 443
        target_port: 443
      - published_port: 8080
        target_port: 8080
    placement:
      constraints:
        - 'node.role == manager'
    user: null
